"""add_quantitative_models

Revision ID: 030f77424824
Revises: 1a31ce608336
Create Date: 2025-10-16 14:44:24.983503

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = '030f77424824'
down_revision = '1a31ce608336'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('market_data',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('symbol', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('data_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('data', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_data_type_timestamp', 'market_data', ['data_type', 'timestamp'], unique=False)
    op.create_index('idx_symbol_timestamp', 'market_data', ['symbol', 'timestamp'], unique=False)
    op.create_index(op.f('ix_market_data_symbol'), 'market_data', ['symbol'], unique=False)
    op.create_index(op.f('ix_market_data_timestamp'), 'market_data', ['timestamp'], unique=False)
    op.create_table('factors',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('factor_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('formula', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=False),
    sa.Column('parameters', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_factors_name'), 'factors', ['name'], unique=False)
    op.create_table('strategies',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('strategy_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('config', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_strategies_name'), 'strategies', ['name'], unique=False)
    op.create_table('backtests',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('strategy_id', sa.Uuid(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('initial_capital', sa.Float(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('results', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('performance_metrics', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['strategy_id'], ['strategies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_backtests_end_date'), 'backtests', ['end_date'], unique=False)
    op.create_index(op.f('ix_backtests_name'), 'backtests', ['name'], unique=False)
    op.create_index(op.f('ix_backtests_start_date'), 'backtests', ['start_date'], unique=False)
    op.create_table('signals',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('strategy_id', sa.Uuid(), nullable=False),
    sa.Column('symbol', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('signal_type', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('signal_strength', sa.Float(), nullable=False),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('message', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['strategy_id'], ['strategies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_signals_signal_type'), 'signals', ['signal_type'], unique=False)
    op.create_index(op.f('ix_signals_symbol'), 'signals', ['symbol'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_signals_symbol'), table_name='signals')
    op.drop_index(op.f('ix_signals_signal_type'), table_name='signals')
    op.drop_table('signals')
    op.drop_index(op.f('ix_backtests_start_date'), table_name='backtests')
    op.drop_index(op.f('ix_backtests_name'), table_name='backtests')
    op.drop_index(op.f('ix_backtests_end_date'), table_name='backtests')
    op.drop_table('backtests')
    op.drop_index(op.f('ix_strategies_name'), table_name='strategies')
    op.drop_table('strategies')
    op.drop_index(op.f('ix_factors_name'), table_name='factors')
    op.drop_table('factors')
    op.drop_index(op.f('ix_market_data_timestamp'), table_name='market_data')
    op.drop_index(op.f('ix_market_data_symbol'), table_name='market_data')
    op.drop_index('idx_symbol_timestamp', table_name='market_data')
    op.drop_index('idx_data_type_timestamp', table_name='market_data')
    op.drop_table('market_data')
    # ### end Alembic commands ###
